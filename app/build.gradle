plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'dagger.hilt.android.plugin'
    id 'com.google.dagger.hilt.android'
}

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace = "com.sample.neuroid.us"
    compileSdkVersion = 35

    packagingOptions {
        pickFirst 'lib/armeabi-v7a/libfbjni.so'
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
        pickFirst 'lib/x86/libc++_shared.so'
        pickFirst 'lib/x86/libfbjni.so'
        pickFirst 'lib/x86_64/libc++_shared.so'
        pickFirst 'lib/x86_64/libfbjni.so'
        pickFirst 'lib/arm64-v8a/libc++_shared.so'
        pickFirst 'lib/arm64-v8a/libfbjni.so'
        resources {
            excludes += ['META-INF/DEPENDENCIES', 'META-INF/ASL2.0']
        }
    }

    defaultConfig {
        applicationId "com.sample.neuroid.us"
        minSdk 28
        targetSdk 35
        multiDexEnabled true
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    bundle {
        language {
            enableSplit = false
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "neuro-id-app-demo-v${defaultConfig.versionName}-${variant.buildType.name}.apk"
        }
    }

    /*signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }*/
    //Remove comment only when running locally. DO NOT upload changes without commenting these lines again

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            debuggable true
        }
        release {
            minifyEnabled true
            shrinkResources = true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //signingConfig signingConfigs.release   //Remove comment only when running locally and. DO NOT upload changes without commenting these lines again
        }
    }

    flavorDimensions = ["native", "adv"]

    productFlavors {
        android {
            dimension "native"
        }
        reactNative {
            dimension "native"
        }

        lib {
            dimension "adv"
        }
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.6.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.code.gson:gson:2.10.1'

    androidTestImplementation 'androidx.test:rules:1.5.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation "androidx.test:core-ktx:1.5.0"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'com.google.truth:truth:0.43'
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    androidTestImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.1") {
        exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-debug"
    }
    androidTestImplementation 'androidx.arch.core:core-testing:2.1.0'
    implementation "androidx.navigation:navigation-fragment-ktx:2.5.2"
    implementation "androidx.navigation:navigation-ui-ktx:2.5.2"
    implementation "androidx.fragment:fragment-ktx:1.5.2"

    implementation project(':NeuroID')
    debugImplementation 'com.github.erosb:everit-json-schema:1.14.1'

    implementation("com.google.dagger:hilt-android:2.48")
    kapt("com.google.dagger:hilt-android-compiler:2.48")

    implementation("com.squareup.retrofit2:retrofit:2.9.0")

    //Moshi
    implementation "com.squareup.moshi:moshi:1.13.0"
    implementation "com.squareup.retrofit2:converter-moshi:2.9.0"
    implementation "com.squareup.moshi:moshi-adapters:1.13.0"
    implementation "com.squareup.moshi:moshi-kotlin:1.13.0"
    implementation "com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.5"
    implementation "com.squareup.okhttp3:okhttp:5.0.0-alpha.5"

    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation 'com.squareup.okhttp3:mockwebserver:5.0.0-alpha.5'
}